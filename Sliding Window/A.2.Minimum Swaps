/*

Given an array of integers A and an integer B, find and return the minimum number of swaps required to bring all
 the numbers less than or equal to B together.

Note: It is possible to swap any two elements, not necessarily consecutive.

*/

public class Solution {
    public int solve(int[] A, int B) {

        int N = A.length;
        int min = 0;

        for(int i=0 ; i<N ; i++){
            if(A[i] <=B){
                min++;
            }
        }

        int bad=0;

        for(int i=0 ; i<min ; i++){
            if(A[i] >B){
                bad++;
            }
        }

        int ans = bad;

        int S1=1;
        int S2=min;

        while(S2<N){
            if(A[S1-1]>B){
                bad--;
            }
            if(A[S2]>B){
                bad++;
            }
            S1++;
            S2++;

            ans = Math.min(ans ,bad);
        }

        return ans;
         

    
    }
}
